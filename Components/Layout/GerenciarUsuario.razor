@using Biblioteca.DataBase.Services
@using Biblioteca.Models
@inject IUserService UserService
<div class="gerenciador">
    <h3>Gerenciar Usuarios</h3>
    <ListarUsuarios/>
    <button class="cadastrar-button btn btn-primary" @onclick="() => { Show(); IsFuncionarioVisible = false; }">Cadastrar Clientes</button>
    <button class="cadastrar-button btn btn-primary" @onclick="() => { Show(); IsFuncionarioVisible = true; }">Cadastrar Funcionários</button>

</div>


<div class="@(IsVisible ? "visible" : "hidden")">
    @if (IsFuncionarioVisible) {
        <h1> Cadastrar Funcionários</h1>
        <CadastrarFuncionario/>
    }
    else {
        <h1> Cadastrar Clientes</h1>
        <CadastrarCliente/>
    }
    <button @onclick="Hide" class="btn btn-outline-danger mt-4">Fechar</button>
</div>


@code {
    private List<Usuario>? _usuarios;

    private TipoUsuario SelectedTipoUsuario { get; set; } = TipoUsuario.Funcionario;
    private List<TipoUsuario> TipoUsuarios { get; set; } = Enum.GetValues(typeof(TipoUsuario)).Cast<TipoUsuario>().ToList();

    private bool IsFuncionarioVisible = false;

    public bool IsVisible { get; private set; }

    public void Show() {
        IsVisible = true;
        StateHasChanged();
    }

    public void Hide() {
        IsVisible = false;
        StateHasChanged();
    }

}